help=help info
query.getBlockByHash.hash=Specific block hash for query
AbstractComplexSubmodule.fast=Whether to use the fast send function, the default does not use
AbstractComplexSubmodule.address=Transaction sending address: string format or wallet json filename
AbstractComplexSubmodule.offline=Trading online or offline. It will trade online if not set. will and generate QR code image placed on the desktop, providing ATON offline scanning code signature
AbstractComplexSubmodule.gasLimit=Limit of gas used
AbstractComplexSubmodule.gasPrice=Price of gas
config=The configuration file that specifies the IP and port to be sent by the transaction. You can get the IP and port by specifying the name in the configuration. If this parameter is not set, the default value will be used
account.new=Create wallet, and create mnemonic ciphertext file at 'wallet' dir. Please do not delete, otherwise cause backup fail
account.backups=backup wallet
account.backups.address=Transaction sending address: string format or wallet json filename
account.delete.address=Wallet file or address
account.getBalance.address=Transaction sending address: string format or wallet json filename
account.check.address=Wallet json filename or address. It will get all wallet files in the jar dir if address not set.
account.check=View local wallet
account.backups.type=select backup way, by mnemonic or private key, such as '--type mnemonic' or '--type privateKey'
AbstractComplexSubmodule.template=View the transaction parameter template. Coexistence with other parameters has no effect
query.blockNumber=Query the current latest block number
address=Transaction sending address: string format or wallet json filename
account.delete=Delete wallet file and corresponding mnemonic ciphertext backup file in 'wallet' dir
account.modify.address=Specify the modified wallet file by name.json or address
account.modify=Modify wallet password
hedge.createRestrictingPlan=Create restricting plan
query.getPackageReward=Query the block reward of the current settlement cycle
staking.getCandidateInfo=Query real-time candidate by nodeId
staking.getCandidateInfo.nodeId=Node Id. If null, it represents query all nodes
staking.getCandidateList=Query all real-time candidate lists
staking.getStakingInfo=Query the pledge information of the current node
staking.getStakingInfo.nodeId=Node id, hexadecimal format, starting with 0x
staking.getStakingReward=Query the staking reward of the current settlement cycle
staking.getValidatorList=Query the list of validators in the current consensus cycle
staking.getVerifierList=Query the queue of validators in the current settlement cycle
staking.create=Node candidate applies for pledge
staking.increase=Increase pledge and increase pledged deposits of pledged nodes
offline=Trading online or offline. It will trade online if not set. will and generate QR code image placed on the desktop, providing ATON offline scanning code signature
template=View the transaction parameter template. Coexistence with other parameters has no effect
param=Transaction param. Json file path or json string
government.submitProposal.module=Proposal type, including CancelProposal, ParamProposal, VersionProposal and TextProposal
government.submitProposal=Submit a Proposal
account.new.name=Wallet name, such as wallet.json
account.new.hrp=Network type
account.new.batch=Batch number of wallet generation, natural number
account.getBalance=Wallet balance
account.recovery=Wallet backup
account.recovery.type=Select backup type, mnemonic or privateKey